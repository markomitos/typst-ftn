= Закључак
<zakljucak>

== Резиме рада и остварени циљеви

Примарна мотивација за овај рад проистекла је из потребе за унапређењем функционалности
претраге _Search Everywhere_ у интегрисаним развојним окружењима, коришћењем модела са
побољшаним перформансама. Утврђено је да TFF, радно окружење за федеративно учење
које чува приватност података, није подржавало библиотеку _Keras_ 3, чиме је онемогућено
коришћење модерних модела попут _Gemma_ 3.

Главни циљ рада, имплементација паралелне подршке за _Keras_ 3 уз очување компатибилности
са _Keras_ 2, је остварен у потпуности. То је постигнуто кроз рефакторисање TFF
модула _models_, _optimizers_, _metrics_ и _algorithms_. Уведено је архитектонско решење
засновано на додавању компоненте keras_compat, која апстрахује и изолује сву логику зависну
од верзије, док је употреба уније типова у програмском језику _Python_ омогућила да TFF
функције несметано прихватају објекте из обе верзије библиотеке. Успешност и функционална
исправност решења верификована је проласком свих постојећих и новододатих јединичних тестова,
чији је број повећан са 140 на 279.

== Кључни доприноси и значај рада

Овај рад доноси два кључна доприноса. Функционални допринос се огледа у томе што је TFF
екосистем сада оспособљен за рад са најновијом генерацијом модела. Као што је показано,
модели попут _Gemma_ 3 нуде значајно већи контекстни прозор (_context window_) и оптимизовани су за рад на
стандардном хардверу, што је пресудно за апликације у индустрији.

Други, архитектонски допринос, лежи у дизајну минимално инвазивног решења које није
нарушило стабилност постојећег TFF кода. Примењени приступ служи као модел за будуће
миграције и доказује да је могуће проширити функционалност сложених система отвореног
кода без потребе за комплетним рефакторисањем. Тиме је представљен значајан корак ка
модернизацији TFF радног окружења.

== Ограничења и будући рад

Током евалуације, препозната су и одређена ограничења. Приступ са раздвојеним тестним
случајевима довео је до дуплирања кода за тестирање. Такође, због
рефакторисања самог TFF пројекта које се десило паралелно са овим радом, директна интеграција
решења у главну грану пројекта тренутно није изводљива.

Наведена ограничења отварају правце за будући рад. Када радно окружење TFF заврши
рефакторисање своје архитектуре, биће могуће адаптирати решење из овог рада у новој
архитектури, чиме би се омогућила интеграција решења у главну грану пројекта. Овом
интеграцијом би корисници радног окружења TFF имали приступ предностима нове
верзије библиотеке _Keras_ унутар TFF, чиме се отварају врата за истраживање
и имплементацију нових, напреднијих алгоритама за федеративно учење која могу
искористити флексибилност _multi-backend_ архитектуре.